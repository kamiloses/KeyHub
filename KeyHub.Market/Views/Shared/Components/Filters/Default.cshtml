@using KeyHub.Market.Models
@model KeyHub.Market.Models.ViewModels.FiltersViewModel

<aside class="filters">
    <form method="get" asp-action="SearchGame">
        <div class="filter-group">
            <label>Price (PLN)</label>
            <div class="price-filter">
                <input type="number" name="minPrice" placeholder="From" value="@ViewBag.MinPrice">
                <span>-</span>
                <input type="number" name="maxPrice" placeholder="To" value="@ViewBag.MaxPrice">
            </div>
        </div>

        <div class="filter-group">
            <label>Platform</label>
            <ul>
                @foreach (var platform in Model.PlatformStats)
                {
                    var isChecked = ViewBag.SelectedPlatforms != null && ((Platform[])ViewBag.SelectedPlatforms).Contains(platform.Platform);
                    var hasAnySelected = ViewBag.SelectedPlatforms != null && ((Platform[])ViewBag.SelectedPlatforms).Length > 0;
                    var isDeemphasized = hasAnySelected && !isChecked;
                    <li>
                        <label class="@(isDeemphasized ? "deemphasized" : "")">
                            <input type="checkbox" name="platforms" value="@platform.Platform" @(isChecked ? "checked" : "")> @platform.Platform
                            <span>@platform.Count</span>
                        </label>
                    </li>
                }
            </ul>
        </div>

        <div class="filter-group">
            <label>Genre</label>
            <ul>
                @foreach (var genre in Model.GenreStats)
                {
                    var isChecked = ViewBag.SelectedGenres != null && ((Genre[])ViewBag.SelectedGenres).Contains(genre.Genre);
                    var hasAnySelected = ViewBag.SelectedGenres != null && ((Genre[])ViewBag.SelectedGenres).Length > 0;
                    var isDeemphasized = hasAnySelected && !isChecked;
                    <li>
                        <label class="@(isDeemphasized ? "deemphasized" : "")">
                            <input type="checkbox" name="genres" value="@genre.Genre" @(isChecked ? "checked" : "")> @genre.Genre
                            <span>@genre.Count</span>
                        </label>
                    </li>
                }
            </ul>
        </div>

        <button type="submit">Apply</button>
        <button type="button" class="add-game-btn" onclick="openModal()">+ Add New Game</button>
    </form>
</aside>

<!-- MODAL -->
<div id="gameModal" class="modal">
    <div class="modal-content">
        <span class="close" onclick="closeModal()">&times;</span>
        <h2>Add New Game</h2>
        <form method="post" asp-action="AddGame" enctype="multipart/form-data">
            <div class="form-group">
                <label for="title">Title</label>
                <input type="text" id="title" name="Title" placeholder="Game title" required>
            </div>

            <div class="form-group">
                <label for="genre">Genre</label>
                <select id="genre" name="Genre" required>
                    @foreach (Genre genre in Enum.GetValues(typeof(Genre)))
                    {
                        <option value="@genre">@genre</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="price">Price (PLN)</label>
                <input type="number" id="price" name="Price" step="0.01" min="0" placeholder="0.00" required>
            </div>

            <div class="form-group">
                <label for="discount">Discount (%)</label>
                <input type="number" id="discount" name="Discount" min="0" max="100" placeholder="0">
            </div>

            <div class="form-group">
                <label for="platform">Platform</label>
                <select id="platform" name="Platform" required>
                    @foreach (Platform platform in Enum.GetValues(typeof(Platform)))
                    {
                        <option value="@platform">@platform</option>
                    }
                </select>
            </div>

            <div class="form-group">
                <label for="stock">Stock</label>
                <input type="number" id="stock" name="Stock" min="0" placeholder="0" required>
            </div>

            <div class="form-group">
                <label for="image">Game Image</label>
                <input type="file" id="image" name="ImageFile" accept="image/*" required>
            </div>

            <button type="submit" class="add-game-btn">Add Game</button>
        </form>
    </div>
</div>

<style>
    .filters label.deemphasized {
        color: #777; 
        opacity: 0.6; 
        transition: opacity 0.2s ease, color 0.2s ease;
    }

    .filters label.deemphasized span {
        color: #777;
    }

    .filters {
        width: 220px;
        padding: 15px;
        background-color: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 10px rgba(0,0,0,0.05);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .filter-group {
        margin-bottom: 20px;
    }

    .filter-group label {
        font-weight: 600;
        font-size: 14px;
        display: block;
        margin-bottom: 8px;
        color: #333;
    }

    .price-filter {
        display: flex;
        gap: 5px;
    }

    .price-filter input {
        width: 80px;
        padding: 4px 6px;
        border: 1px solid #ccc;
        border-radius: 4px;
        font-size: 13px;
    }

    .price-filter span {
        display: flex;
        align-items: center;
        font-size: 14px;
        color: #666;
    }

    .filter-group ul {
        list-style: none;
        padding-left: 0;
        margin: 0;
    }

    .filter-group ul li {
        padding: 5px 0;
        font-size: 13px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .filter-group ul li label {
        cursor: pointer;
        display: flex;
        justify-content: space-between;
        width: 100%;
    }

    .filter-group input[type="checkbox"] {
        margin-right: 8px;
        accent-color: #4CAF50;
    }

    button[type="submit"] {
        width: 100%;
        padding: 8px;
        background-color: #4CAF50;
        color: white;
        font-weight: 600;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        transition: background-color 0.2s ease;
    }

    button[type="submit"]:hover {
        background-color: #45a049;
    }

    /* STYL NOWEGO PRZYCISKU */
    .add-game-btn {
        display: block;
        text-align: center;
        margin-top: 10px;
        padding: 8px;
        background-color: #2196F3;
        color: white;
        font-weight: 600;
        border-radius: 6px;
        border: none;
        cursor: pointer;
        transition: background-color 0.2s ease;
        width: 100%;
    }

    .add-game-btn:hover {
        background-color: #1976D2;
    }

    /* MODAL */
    .modal {
        display: none; 
        position: fixed; 
        z-index: 1000; 
        left: 0; 
        top: 0; 
        width: 100%; 
        height: 100%; 
        background-color: rgba(0,0,0,0.5); 
    }

    .modal-content {
        background-color: #fff;
        margin: 15% auto;
        padding: 20px;
        border-radius: 12px;
        width: 400px;
        height: 200px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.3);
        position: relative;
    }

    .close {
        position: absolute;
        top: 10px;
        right: 15px;
        font-size: 22px;
        cursor: pointer;
    }
</style>

<script>
    function openModal() {
        document.getElementById("gameModal").style.display = "block";
    }

    function closeModal() {
        document.getElementById("gameModal").style.display = "none";
    }

    // Zamknięcie po kliknięciu w tło
    window.onclick = function(event) {
        const modal = document.getElementById("gameModal");
        if (event.target === modal) {
            modal.style.display = "none";
        }
    }
</script>
